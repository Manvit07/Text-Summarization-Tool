# -*- coding: utf-8 -*-
"""Text Summarization Tool.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10KzF-4LKzSxKX9V9yFj7ytl80qSnm4H9
"""

!pip install transformers
!pip install torch
!pip install nltk

!pip install PyMuPDF
!pip install sumy

# Transformers
from transformers import pipeline

# NLTK for sentence tokenization
import nltk
nltk.download('punkt')
nltk.download('punkt_tab') # Add this line to download the required resource

# File handling
import fitz  # PyMuPDF for PDF
from sumy.parsers.plaintext import PlaintextParser
from sumy.nlp.tokenizers import Tokenizer
from sumy.summarizers.lsa import LsaSummarizer

# Other
import os

# Hugging Face BART summarizer
bart_summarizer = pipeline("summarization", model="facebook/bart-large-cnn")

def summarize_with_bart(text, max_length=130, min_length=30):
    summary = bart_summarizer(text, max_length=max_length, min_length=min_length, do_sample=False)
    return summary[0]['summary_text']

def summarize_with_sumy(text, sentence_count=5):
    parser = PlaintextParser.from_string(text, Tokenizer("english"))
    summarizer = LsaSummarizer()
    summary = summarizer(parser.document, sentence_count)
    return " ".join(str(sentence) for sentence in summary)

def read_txt_file(file_path):
    with open(file_path, 'r', encoding='utf-8') as f:
        return f.read()

def read_pdf_file(file_path):
    doc = fitz.open(file_path)
    text = ""
    for page in doc:
        text += page.get_text()
    return text

from google.colab import files

uploaded = files.upload()
filename = list(uploaded.keys())[0]

# Detect file type
if filename.endswith('.txt'):
    text_data = read_txt_file(filename)
elif filename.endswith('.pdf'):
    text_data = read_pdf_file(filename)
else:
    raise ValueError("Unsupported file type. Upload only .txt or .pdf files.")

print("Choose summarization model:")
print("1. BART (transformers - abstractive)")
print("2. LSA (sumy - extractive)")

choice = input("Enter 1 or 2: ")

if choice == "1":
    summary = summarize_with_bart(text_data)
elif choice == "2":
    summary = summarize_with_sumy(text_data)
else:
    summary = "Invalid choice."

print("\n--- ORIGINAL TEXT ---\n")
print(text_data[:1000])  # print first 1000 chars

print("\n--- SUMMARY ---\n")
print(summary)